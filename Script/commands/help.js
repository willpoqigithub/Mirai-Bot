const ITEMS_PER_PAGE = 15;

module.exports.config = {
  name: "help",
  version: "2.0.0",
  hasPermssion: 0,
  credits: "Aminul Sordar",
  description: "üìö Show all commands with pagination and details",
  commandCategory: "üõ† System",
  usages: "[page | command name]",
  cooldowns: 5
};

module.exports.languages = {
  en: {
    helpList:
      "üìñ ùóõùóòùóüùó£ ùó†ùóòùó°ùó® (ùó£ùóÆùó¥ùó≤ %1/%2)\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n%3\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüìå ùóßùóºùòÅùóÆùóπ ùóñùóºùó∫ùó∫ùóÆùóªùó±ùòÄ: %4\nüìÇ ùóßùóºùòÅùóÆùóπ ùóòùòÉùó≤ùóªùòÅùòÄ: %5\nüßë‚Äçüíª ùó†ùóÆùó±ùó≤ ùóØùòÜ: Willy Magusib\nüí° %6",
    moduleInfo:
      "üîπ ùóñùóºùó∫ùó∫ùóÆùóªùó±: %1\nüìñ ùóóùó≤ùòÄùó∞: %2\n\nüõ† ùó®ùòÄùóÆùó¥ùó≤: %3\nüìÅ ùóñùóÆùòÅùó≤ùó¥ùóºùóøùòÜ: %4\n‚è± ùóñùóºùóºùóπùó±ùóºùòÑùóª: %5s\nüîê ùó£ùó≤ùóøùó∫ùó∂ùòÄùòÄùó∂ùóºùóª: %6\nüë®‚Äçüíª ùóñùóºùó±ùó≤ùó± ùóØùòÜ: %7",
    user: "User üë§",
    adminGroup: "Group Admin üëÆ",
    adminBot: "Bot Admin ü§ñ"
  }
};

const tips = [
  "Try: help uptime to see how it works!",
  "Use the command name like 'help info'.",
  "Want updates? Join AminulBot's support group!",
  "You can change prefix per group.",
  "Use commands wisely and don't spam.",
  "Need image help? Type help photo!"
];

module.exports.run = async function ({ api, event, args, getText }) {
  const { threadID, messageID } = event;
  const { commands, events } = global.client;
  const threadSetting = global.data.threadData.get(parseInt(threadID)) || {};
  const prefix = threadSetting.hasOwnProperty("PREFIX") ? threadSetting.PREFIX : global.config.PREFIX;

  // If user requested specific command help
  if (args[0] && commands.has(args[0].toLowerCase())) {
    const cmd = commands.get(args[0].toLowerCase());
    const perm =
      cmd.config.hasPermssion === 0
        ? getText("user")
        : cmd.config.hasPermssion === 1
        ? getText("adminGroup")
        : getText("adminBot");

    return api.sendMessage(
      getText(
        "moduleInfo",
        cmd.config.name,
        cmd.config.description,
        `${prefix}${cmd.config.name} ${cmd.config.usages || ""}`,
        cmd.config.commandCategory,
        cmd.config.cooldowns,
        perm,
        cmd.config.credits
      ),
      threadID,
      messageID
    );
  }

  // Paginated list of commands
  const allCmds = Array.from(commands.values()).map(
    (cmd, i) => `üîπ ${i + 1}. ${cmd.config.name}`
  );
  const totalCmds = allCmds.length;
  const totalEvts = global.client.events.size;
  const totalPages = Math.ceil(totalCmds / ITEMS_PER_PAGE);
  const page = Math.max(1, parseInt(args[0]) || 1);

  if (page > totalPages)
    return api.sendMessage(
      `‚ùå Page ${page} does not exist! Total pages: ${totalPages}`,
      threadID,
      messageID
    );

  const start = (page - 1) * ITEMS_PER_PAGE;
  const end = start + ITEMS_PER_PAGE;
  const pageCmds = allCmds.slice(start, end).join("\n");
  const tip = tips[Math.floor(Math.random() * tips.length)];

  const msg = getText(
    "helpList",
    page,
    totalPages,
    pageCmds,
    totalCmds,
    totalEvts,
    tip
  );

  return api.sendMessage(msg, threadID, messageID);
};
